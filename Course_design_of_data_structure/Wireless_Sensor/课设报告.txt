五、无线传感器网络(必做) （图）
1.[问题描述]
在一个直角坐标（设为100*100）平面中，随机分布n无线传感器结点，汇聚点为原点（0，0），要求将每个无线传感器结点的信息传输到汇聚点，传输可以通过多跳方式实现，设无线传感器结点最大无线通信距离为10，传输能耗与距离平方成正比，传输时间与距离成正比。
问题一：建立每个结点传输到汇聚点的最短时间通道，并给无法实现传输的结点，将其排除。
问题二：建立整个网络传输到汇聚点的平均能耗最小网络结构。
[基本要求]
输入格式： 输入的第一行包含一个正整数n，表示无线传感器结点数量。结点使用1, 2, 3, ……n依次标号。  接下来n行，每行包含三个整数ni, xi, yi，其中xi, yi表示第ni个结点的坐标，要求从文本文件中输入。
输出格式：
问题一：输出每个结点到汇聚点的最短时间通道，包括最短时间和经过结点。  
问题二：输出整个网络到汇聚点的平均能耗最小网络结构，包括平均最小能耗和连接方式。

2.采用的数据结构
通过邻接表存储所有点的信息。
typedef struct Location{//坐标 
	int x;
	int y;
}Location;
typedef struct Weight{//记录权值以及权值的平方 
	float weight;
	int w_weight;
}Weight;

typedef int Status;
typedef Location VertexType;

typedef Weight InfoType;
typedef struct ArcNode{
	int adjvex;//存储当前邻接顶点在顶点向量中的位置 
	struct ArcNode*nextarc;//存储下一个邻接点 
	InfoType *inof;//存储权值信息 
}ArcNode;
typedef struct VNode{
	VertexType data;//储存顶点位置信息 
	ArcNode *firstarc;//记录第一个邻接顶点的位置 
}VNode,AdjList[MAX_VERTEX_NUM];

typedef struct{
	AdjList vertices; //储存所有顶点连接情况 
	int vexnum;
}ALGraph;
3.算法思想

邻接表的建立：
随机生成n个坐标，若该位置已经记录则重新生成。将这些坐标按x-》y排序，排序完成将其存到邻接表中，然后依次遍历所有顶点，扫描右下的10*10的方格中有没有其他顶点，若存在判断距离是否＜10，若ok则这两个点互相邻接，遍历完成邻接表建立。

连通判断：
从汇点（0，0）开始深度遍历。遍历结束所有访问到的均为连通点，其余点删除。

最少传输时间：
通过DIJ最短路径算法实现。不同的是最短距离只需求linkNum次，即将所有连通点的最短距离求出即可，结果即为最少传输时间。

最少能耗：
通过PRIM最小生成树算法实现。

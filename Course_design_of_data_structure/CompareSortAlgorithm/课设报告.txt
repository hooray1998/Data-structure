六、排序算法比较 （必做）（排序）
1.[问题描述]
利用随机函数产生10个样本的20000个随机整数（其中之一已经是正序，之一是逆序），利用直接插入排序、希尔排序，冒泡排序、快速排序、选择排序、堆排序，归并排序、基数排序8种排序方法进行排序（结果为由小到大的顺序），并统计每一种排序算法对不同样本所耗费的时间。
 [基本要求]
（1） 原始数据存在文件中，用相同样本对不同算法进行测试；
（2） 屏幕显示每种排序算法对不同样本所花的时间；


3.算法思想
直接插入排序：从第二个数开始向后循环，若该数比前一个数大，则不做操作，否则，将其置入0号位置作为哨兵，向前遍历，若前一个元素大于该元素，就将前一个数向后移动一个位置，找到的第一个小于等于该数的位置之后，即为插入位置。

选择排序：
从第一个位置开始循环，通过Min（）函数找出当前元素往后所有元素中最小的一个，将其与第一个元素交换，继续进行第二个位置，直到循环结束。

交换排序：（冒泡排序）
通过两个for循环实现。i从1开始，j从i开始，依次比较a【i】和a【j】，若j小于该元素，则交换，反之，不操作，并让j++。直到j为Len结束第一次循环，结束时最小的元素已经移动到了最前面。使i++，继续循环此操作。

堆排序：构造一个大顶堆（或小顶堆），将堆顶数据输出后，最右下角的数据被移动到堆顶，再次从下到上调整成一个大顶堆，并输出堆顶元素，重复上述操作直至输出所有数据。

基数排序：建立F[0]到F[9]的数组，从个位开始，将每个数据连到对应的数组上，再讲数据按序收集，链到一起，对十位、百位重复此操作直至最高位。

希尔排序：先将整个待排记录序列分割成为若干子序列分别进行直接插入排，待整个序列中的记录基本有序时，对全体记录进行一次直接插入排序。本处即按增量序列依次为9,5,3,2,1进行处理。

归并排序：
	通过多次递归的归并实现。
（1）归并思想：将两个有序序列合并到一个序列，比较首元素，小的赋给数组new，并让该数组指针加一，new数组的指针也加一。当一个数组元素已经合并完时直接将另一个数组剩余的元素接到new数组末尾即可。
（2）排序思想：递归归并排序该序列一分为二的子序列，重复此过程，直到当前序列长度为一，然后两两归并为一个序列，归并后序列变大，直到合并为一个序列。
快速排序：取第一个元素为数轴，所有小于他的数放在枢轴前，小于他的数放在枢轴后，再对划分后的每个部分重复此操作，直至某次划分后该部分的low==high，即只有一个数据。
4.时间复杂度：
直接插入排序：O(N*N)
希尔排序：O（NlogN）
冒泡排序：O(N*N)；
选择排序：O（N*N）
归并排序：O（NlogN）
堆排序：O（NlogN）
基数排序：O（cN+d）
